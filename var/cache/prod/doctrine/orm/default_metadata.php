<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Address__CLASSMETADATA__' => 0,
'App__Entity__Category__CLASSMETADATA__' => 1,
'App__Entity__Order__CLASSMETADATA__' => 2,
'App__Entity__OrderDetails__CLASSMETADATA__' => 3,
'App__Entity__Page__CLASSMETADATA__' => 4,
'App__Entity__PaymentMethod__CLASSMETADATA__' => 5,
'App__Entity__Product__CLASSMETADATA__' => 6,
'App__Entity__Settings__CLASSMETADATA__' => 7,
'App__Entity__User__CLASSMETADATA__' => 8,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Address',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AddressRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'client_name' => $o[3],
                        'street' => $o[4],
                        'code_postal' => $o[5],
                        'city' => $o[6],
                        'state' => $o[7],
                        'more_details' => $o[8],
                        'updated_at' => $o[9],
                        'created_at' => $o[10],
                        'address_type' => $o[11],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'client_name' => 'client_name',
                        'street' => 'street',
                        'code_postal' => 'code_postal',
                        'city' => 'city',
                        'state' => 'state',
                        'more_details' => 'more_details',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                        'address_type' => 'address_type',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'client_name' => 'client_name',
                        'street' => 'street',
                        'code_postal' => 'code_postal',
                        'city' => 'city',
                        'state' => 'state',
                        'more_details' => 'more_details',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                        'address_type' => 'address_type',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'address',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => $o[12],
                    ],
                ],
                'idGenerator' => [
                    $o[14],
                ],
                'name' => [
                    'App\\Entity\\Address',
                    13 => 'user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'text',
                    'datetime_immutable',
                    'datetime_immutable',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'client_name',
                    'street',
                    'code_postal',
                    'city',
                    'state',
                    'more_details',
                    'updated_at',
                    'created_at',
                    'address_type',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'client_name',
                    'street',
                    'code_postal',
                    'city',
                    'state',
                    'more_details',
                    'updated_at',
                    'created_at',
                    'address_type',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    11 => 255,
                ],
                'nullable' => [
                    5 => true,
                    8 => true,
                    true,
                    11 => true,
                    13 => false,
                ],
                'fetch' => [
                    12 => 2,
                ],
                'sourceEntity' => [
                    12 => 'App\\Entity\\Address',
                ],
                'inversedBy' => [
                    12 => 'addresses',
                ],
                'sourceToTargetKeyColumns' => [
                    12 => [
                        'user_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    12 => [
                        'id' => 'user_id',
                    ],
                ],
                'joinColumns' => [
                    12 => [
                        $o[13],
                    ],
                ],
                'joinColumnFieldNames' => [
                    12 => [
                        'user_id' => 'user_id',
                    ],
                ],
                'unique' => [
                    13 => false,
                ],
                'referencedColumnName' => [
                    13 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    12 => 'user',
                ],
                'targetEntity' => [
                    12 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Category',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CategoryRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'slug' => $o[3],
                        'description' => $o[4],
                        'imageUrl' => $o[5],
                        'isMega' => $o[6],
                        'updated_at' => $o[7],
                        'created_at' => $o[8],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'slug' => 'slug',
                        'description' => 'description',
                        'image_url' => 'imageUrl',
                        'is_mega' => 'isMega',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'slug' => 'slug',
                        'description' => 'description',
                        'imageUrl' => 'image_url',
                        'isMega' => 'is_mega',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'category',
                    ],
                ],
                'associationMappings' => [
                    [
                        'products' => $o[9],
                    ],
                ],
                'idGenerator' => [
                    $o[10],
                ],
                'name' => [
                    'App\\Entity\\Category',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'boolean',
                    'datetime_immutable',
                    'datetime_immutable',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'slug',
                    'description',
                    'imageUrl',
                    'isMega',
                    'updated_at',
                    'created_at',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'slug',
                    'description',
                    'image_url',
                    'is_mega',
                    'updated_at',
                    'created_at',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                    255,
                ],
                'nullable' => [
                    4 => true,
                    true,
                    true,
                    true,
                ],
                'fetch' => [
                    9 => 2,
                ],
                'sourceEntity' => [
                    9 => 'App\\Entity\\Category',
                ],
                'mappedBy' => [
                    9 => 'categories',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    9 => 'products',
                ],
                'targetEntity' => [
                    9 => 'App\\Entity\\Product',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Order',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\OrderRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'client_name' => $o[2],
                        'shipping_address' => $o[3],
                        'billing_address' => $o[4],
                        'quantity' => $o[5],
                        'order_cost' => $o[6],
                        'taxe' => $o[7],
                        'order_cost_ttc' => $o[8],
                        'isPayed' => $o[9],
                        'status' => $o[10],
                        'carrier_price' => $o[11],
                        'carrier_name' => $o[12],
                        'carrier_id' => $o[13],
                        'updated_at' => $o[14],
                        'created_at' => $o[15],
                        'stripeClientSecret' => $o[16],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'client_name' => 'client_name',
                        'shipping_address' => 'shipping_address',
                        'billing_address' => 'billing_address',
                        'quantity' => 'quantity',
                        'order_cost' => 'order_cost',
                        'taxe' => 'taxe',
                        'order_cost_ttc' => 'order_cost_ttc',
                        'is_payed' => 'isPayed',
                        'status' => 'status',
                        'carrier_price' => 'carrier_price',
                        'carrier_name' => 'carrier_name',
                        'carrier_id' => 'carrier_id',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                        'stripe_client_secret' => 'stripeClientSecret',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'client_name' => 'client_name',
                        'shipping_address' => 'shipping_address',
                        'billing_address' => 'billing_address',
                        'quantity' => 'quantity',
                        'order_cost' => 'order_cost',
                        'taxe' => 'taxe',
                        'order_cost_ttc' => 'order_cost_ttc',
                        'isPayed' => 'is_payed',
                        'status' => 'status',
                        'carrier_price' => 'carrier_price',
                        'carrier_name' => 'carrier_name',
                        'carrier_id' => 'carrier_id',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                        'stripeClientSecret' => 'stripe_client_secret',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'order',
                        'quoted' => true,
                    ],
                ],
                'associationMappings' => [
                    [
                        'orderDetails' => $o[17],
                    ],
                ],
                'idGenerator' => [
                    $o[18],
                ],
                'name' => [
                    'App\\Entity\\Order',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'text',
                    'text',
                    'integer',
                    'integer',
                    'integer',
                    'integer',
                    'boolean',
                    'string',
                    'integer',
                    'string',
                    'integer',
                    'datetime_immutable',
                    'datetime_immutable',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'client_name',
                    'shipping_address',
                    'billing_address',
                    'quantity',
                    'order_cost',
                    'taxe',
                    'order_cost_ttc',
                    'isPayed',
                    'status',
                    'carrier_price',
                    'carrier_name',
                    'carrier_id',
                    'updated_at',
                    'created_at',
                    'stripeClientSecret',
                ],
                'columnName' => [
                    1 => 'id',
                    'client_name',
                    'shipping_address',
                    'billing_address',
                    'quantity',
                    'order_cost',
                    'taxe',
                    'order_cost_ttc',
                    'is_payed',
                    'status',
                    'carrier_price',
                    'carrier_name',
                    'carrier_id',
                    'updated_at',
                    'created_at',
                    'stripe_client_secret',
                ],
                'length' => [
                    2 => 255,
                    10 => 255,
                    12 => 255,
                    16 => 255,
                ],
                'nullable' => [
                    3 => true,
                    true,
                    7 => true,
                    9 => true,
                    11 => true,
                    true,
                    true,
                    true,
                    16 => true,
                ],
                'fetch' => [
                    17 => 2,
                ],
                'sourceEntity' => [
                    17 => 'App\\Entity\\Order',
                ],
                'mappedBy' => [
                    17 => 'myOrder',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    17 => 'orderDetails',
                ],
                'targetEntity' => [
                    17 => 'App\\Entity\\OrderDetails',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\OrderDetails',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\OrderDetailsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'product_name' => $o[2],
                        'product_description' => $o[3],
                        'product_solde_price' => $o[4],
                        'product_regular_price' => $o[5],
                        'quantity' => $o[6],
                        'taxe' => $o[7],
                        'subtotal' => $o[8],
                        'updated_at' => $o[9],
                        'created_at' => $o[10],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'product_name' => 'product_name',
                        'product_description' => 'product_description',
                        'product_solde_price' => 'product_solde_price',
                        'product_regular_price' => 'product_regular_price',
                        'quantity' => 'quantity',
                        'taxe' => 'taxe',
                        'subtotal' => 'subtotal',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'product_name' => 'product_name',
                        'product_description' => 'product_description',
                        'product_solde_price' => 'product_solde_price',
                        'product_regular_price' => 'product_regular_price',
                        'quantity' => 'quantity',
                        'taxe' => 'taxe',
                        'subtotal' => 'subtotal',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'order_details',
                    ],
                ],
                'associationMappings' => [
                    [
                        'myOrder' => $o[11],
                    ],
                ],
                'idGenerator' => [
                    $o[13],
                ],
                'name' => [
                    'App\\Entity\\OrderDetails',
                    12 => 'my_order_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'integer',
                    'integer',
                    'integer',
                    'integer',
                    'integer',
                    'datetime_immutable',
                    'datetime_immutable',
                ],
                'fieldName' => [
                    1 => 'id',
                    'product_name',
                    'product_description',
                    'product_solde_price',
                    'product_regular_price',
                    'quantity',
                    'taxe',
                    'subtotal',
                    'updated_at',
                    'created_at',
                ],
                'columnName' => [
                    1 => 'id',
                    'product_name',
                    'product_description',
                    'product_solde_price',
                    'product_regular_price',
                    'quantity',
                    'taxe',
                    'subtotal',
                    'updated_at',
                    'created_at',
                ],
                'length' => [
                    2 => 255,
                    255,
                ],
                'nullable' => [
                    7 => true,
                    9 => true,
                    12 => false,
                ],
                'fetch' => [
                    11 => 2,
                ],
                'sourceEntity' => [
                    11 => 'App\\Entity\\OrderDetails',
                ],
                'inversedBy' => [
                    11 => 'orderDetails',
                ],
                'sourceToTargetKeyColumns' => [
                    11 => [
                        'my_order_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    11 => [
                        'id' => 'my_order_id',
                    ],
                ],
                'joinColumns' => [
                    11 => [
                        $o[12],
                    ],
                ],
                'joinColumnFieldNames' => [
                    11 => [
                        'my_order_id' => 'my_order_id',
                    ],
                ],
                'unique' => [
                    12 => false,
                ],
                'referencedColumnName' => [
                    12 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    11 => 'myOrder',
                ],
                'targetEntity' => [
                    11 => 'App\\Entity\\Order',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Page',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'title' => $o[2],
                        'slug' => $o[3],
                        'content' => $o[4],
                        'isHeader' => $o[5],
                        'isFooter' => $o[6],
                        'updated_at' => $o[7],
                        'created_at' => $o[8],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'title' => 'title',
                        'slug' => 'slug',
                        'content' => 'content',
                        'is_header' => 'isHeader',
                        'is_footer' => 'isFooter',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'title' => 'title',
                        'slug' => 'slug',
                        'content' => 'content',
                        'isHeader' => 'is_header',
                        'isFooter' => 'is_footer',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'page',
                    ],
                ],
                'idGenerator' => [
                    $o[9],
                ],
                'name' => [
                    'App\\Entity\\Page',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'text',
                    'boolean',
                    'boolean',
                    'datetime_immutable',
                    'datetime_immutable',
                ],
                'fieldName' => [
                    1 => 'id',
                    'title',
                    'slug',
                    'content',
                    'isHeader',
                    'isFooter',
                    'updated_at',
                    'created_at',
                ],
                'columnName' => [
                    1 => 'id',
                    'title',
                    'slug',
                    'content',
                    'is_header',
                    'is_footer',
                    'updated_at',
                    'created_at',
                ],
                'length' => [
                    2 => 255,
                    255,
                ],
                'nullable' => [
                    4 => true,
                    true,
                    true,
                    true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\PaymentMethod',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PaymentMethodRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'description' => $o[3],
                        'more_description' => $o[4],
                        'imageUrl' => $o[5],
                        'test_public_api_key' => $o[6],
                        'test_private_api_key' => $o[7],
                        'prod_public_api_key' => $o[8],
                        'prod_private_api_key' => $o[9],
                        'updated_at' => $o[10],
                        'created_at' => $o[11],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'more_description' => 'more_description',
                        'image_url' => 'imageUrl',
                        'test_public_api_key' => 'test_public_api_key',
                        'test_private_api_key' => 'test_private_api_key',
                        'prod_public_api_key' => 'prod_public_api_key',
                        'prod_private_api_key' => 'prod_private_api_key',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'more_description' => 'more_description',
                        'imageUrl' => 'image_url',
                        'test_public_api_key' => 'test_public_api_key',
                        'test_private_api_key' => 'test_private_api_key',
                        'prod_public_api_key' => 'prod_public_api_key',
                        'prod_private_api_key' => 'prod_private_api_key',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'payment_method',
                    ],
                ],
                'idGenerator' => [
                    $o[12],
                ],
                'name' => [
                    'App\\Entity\\PaymentMethod',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'text',
                    'string',
                    'text',
                    'text',
                    'text',
                    'text',
                    'datetime_immutable',
                    'datetime_immutable',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'description',
                    'more_description',
                    'imageUrl',
                    'test_public_api_key',
                    'test_private_api_key',
                    'prod_public_api_key',
                    'prod_private_api_key',
                    'updated_at',
                    'created_at',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'description',
                    'more_description',
                    'image_url',
                    'test_public_api_key',
                    'test_private_api_key',
                    'prod_public_api_key',
                    'prod_private_api_key',
                    'updated_at',
                    'created_at',
                ],
                'length' => [
                    2 => 255,
                    255,
                    5 => 255,
                ],
                'nullable' => [
                    4 => true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTableMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTableMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Product',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ProductRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'slug' => $o[3],
                        'description' => $o[4],
                        'more_description' => $o[5],
                        'additional_infos' => $o[6],
                        'stock' => $o[7],
                        'solde_price' => $o[8],
                        'regular_price' => $o[9],
                        'imageUrls' => $o[10],
                        'brand' => $o[11],
                        'isAvailable' => $o[12],
                        'isBestSeller' => $o[13],
                        'isNewArrival' => $o[14],
                        'updated_at' => $o[15],
                        'created_at' => $o[16],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'slug' => 'slug',
                        'description' => 'description',
                        'more_description' => 'more_description',
                        'additional_infos' => 'additional_infos',
                        'stock' => 'stock',
                        'solde_price' => 'solde_price',
                        'regular_price' => 'regular_price',
                        'image_urls' => 'imageUrls',
                        'brand' => 'brand',
                        'is_available' => 'isAvailable',
                        'is_best_seller' => 'isBestSeller',
                        'is_new_arrival' => 'isNewArrival',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'slug' => 'slug',
                        'description' => 'description',
                        'more_description' => 'more_description',
                        'additional_infos' => 'additional_infos',
                        'stock' => 'stock',
                        'solde_price' => 'solde_price',
                        'regular_price' => 'regular_price',
                        'imageUrls' => 'image_urls',
                        'brand' => 'brand',
                        'isAvailable' => 'is_available',
                        'isBestSeller' => 'is_best_seller',
                        'isNewArrival' => 'is_new_arrival',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'product',
                    ],
                ],
                'associationMappings' => [
                    [
                        'categories' => $o[17],
                    ],
                ],
                'idGenerator' => [
                    $o[21],
                ],
                'name' => [
                    'App\\Entity\\Product',
                    18 => 'product_category',
                    'product_id',
                    'category_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'text',
                    'text',
                    'integer',
                    'integer',
                    'integer',
                    'array',
                    'string',
                    'boolean',
                    'boolean',
                    'boolean',
                    'datetime_immutable',
                    'datetime_immutable',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'slug',
                    'description',
                    'more_description',
                    'additional_infos',
                    'stock',
                    'solde_price',
                    'regular_price',
                    'imageUrls',
                    'brand',
                    'isAvailable',
                    'isBestSeller',
                    'isNewArrival',
                    'updated_at',
                    'created_at',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'slug',
                    'description',
                    'more_description',
                    'additional_infos',
                    'stock',
                    'solde_price',
                    'regular_price',
                    'image_urls',
                    'brand',
                    'is_available',
                    'is_best_seller',
                    'is_new_arrival',
                    'updated_at',
                    'created_at',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                    11 => 255,
                ],
                'nullable' => [
                    5 => true,
                    true,
                    true,
                    true,
                    11 => true,
                    true,
                    true,
                    true,
                    true,
                ],
                'fetch' => [
                    17 => 2,
                ],
                'isOnDeleteCascade' => [
                    17 => true,
                ],
                'sourceEntity' => [
                    17 => 'App\\Entity\\Product',
                ],
                'inversedBy' => [
                    17 => 'products',
                ],
                'joinTable' => [
                    17 => $o[18],
                ],
                'joinTableColumns' => [
                    17 => [
                        'product_id',
                        'category_id',
                    ],
                ],
                'relationToSourceKeyColumns' => [
                    17 => [
                        'product_id' => 'id',
                    ],
                ],
                'relationToTargetKeyColumns' => [
                    17 => [
                        'category_id' => 'id',
                    ],
                ],
                'joinColumns' => [
                    18 => [
                        $o[19],
                    ],
                ],
                'inverseJoinColumns' => [
                    18 => [
                        $o[20],
                    ],
                ],
                'onDelete' => [
                    19 => 'CASCADE',
                    'CASCADE',
                ],
                'referencedColumnName' => [
                    19 => 'id',
                    'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    17 => 'categories',
                ],
                'targetEntity' => [
                    17 => 'App\\Entity\\Category',
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Settings',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\SettingsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'websiteName' => $o[2],
                        'description' => $o[3],
                        'taxe' => $o[4],
                        'logo' => $o[5],
                        'street' => $o[6],
                        'city' => $o[7],
                        'updated_at' => $o[8],
                        'created_at' => $o[9],
                        'phone' => $o[10],
                        'facebook' => $o[11],
                        'youtube' => $o[12],
                        'instagram' => $o[13],
                        'email' => $o[14],
                        'copyright' => $o[15],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'website_name' => 'websiteName',
                        'description' => 'description',
                        'taxe' => 'taxe',
                        'logo' => 'logo',
                        'street' => 'street',
                        'city' => 'city',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                        'phone' => 'phone',
                        'facebook' => 'facebook',
                        'youtube' => 'youtube',
                        'instagram' => 'instagram',
                        'email' => 'email',
                        'copyright' => 'copyright',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'websiteName' => 'website_name',
                        'description' => 'description',
                        'taxe' => 'taxe',
                        'logo' => 'logo',
                        'street' => 'street',
                        'city' => 'city',
                        'updated_at' => 'updated_at',
                        'created_at' => 'created_at',
                        'phone' => 'phone',
                        'facebook' => 'facebook',
                        'youtube' => 'youtube',
                        'instagram' => 'instagram',
                        'email' => 'email',
                        'copyright' => 'copyright',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'settings',
                    ],
                ],
                'idGenerator' => [
                    $o[16],
                ],
                'name' => [
                    'App\\Entity\\Settings',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'integer',
                    'string',
                    'string',
                    'string',
                    'datetime_immutable',
                    'datetime_immutable',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'websiteName',
                    'description',
                    'taxe',
                    'logo',
                    'street',
                    'city',
                    'updated_at',
                    'created_at',
                    'phone',
                    'facebook',
                    'youtube',
                    'instagram',
                    'email',
                    'copyright',
                ],
                'columnName' => [
                    1 => 'id',
                    'website_name',
                    'description',
                    'taxe',
                    'logo',
                    'street',
                    'city',
                    'updated_at',
                    'created_at',
                    'phone',
                    'facebook',
                    'youtube',
                    'instagram',
                    'email',
                    'copyright',
                ],
                'length' => [
                    2 => 255,
                    255,
                    5 => 255,
                    255,
                    255,
                    10 => 255,
                    255,
                    255,
                    255,
                    255,
                    255,
                ],
                'nullable' => [
                    4 => true,
                    8 => true,
                    10 => true,
                    true,
                    true,
                    true,
                    true,
                    true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'email' => $o[2],
                        'roles' => $o[3],
                        'password' => $o[4],
                        'full_name' => $o[5],
                        'Civility' => $o[6],
                        'created_at' => $o[7],
                        'update_at' => $o[8],
                        'isVerified' => $o[9],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'full_name' => 'full_name',
                        'civility' => 'Civility',
                        'created_at' => 'created_at',
                        'update_at' => 'update_at',
                        'is_verified' => 'isVerified',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'full_name' => 'full_name',
                        'Civility' => 'civility',
                        'created_at' => 'created_at',
                        'update_at' => 'update_at',
                        'isVerified' => 'is_verified',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'addresses' => $o[10],
                    ],
                ],
                'idGenerator' => [
                    $o[11],
                ],
                'name' => [
                    'App\\Entity\\User',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'json',
                    'string',
                    'string',
                    'string',
                    'datetime_immutable',
                    'datetime_immutable',
                    'boolean',
                ],
                'fieldName' => [
                    1 => 'id',
                    'email',
                    'roles',
                    'password',
                    'full_name',
                    'Civility',
                    'created_at',
                    'update_at',
                    'isVerified',
                ],
                'columnName' => [
                    1 => 'id',
                    'email',
                    'roles',
                    'password',
                    'full_name',
                    'civility',
                    'created_at',
                    'update_at',
                    'is_verified',
                ],
                'length' => [
                    2 => 180,
                    5 => 255,
                    255,
                ],
                'unique' => [
                    2 => true,
                ],
                'nullable' => [
                    5 => true,
                    true,
                    true,
                    true,
                ],
                'fetch' => [
                    10 => 2,
                ],
                'sourceEntity' => [
                    10 => 'App\\Entity\\User',
                ],
                'mappedBy' => [
                    10 => 'user',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    10 => 'addresses',
                ],
                'targetEntity' => [
                    10 => 'App\\Entity\\Address',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
